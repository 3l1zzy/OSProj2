The only error that I know of at this point is that it the GUI updates so fast it looks like the workers are working during idle sometimes but if I mess with the speed too much it changes the array used to paint the widgets on the screen while reading from it and makes null pointers happen.
Five files included:
  Factory.java - Driver for the program. Initializes everything and creates the threads and joins them.
  Widget.java - Contains widget constructor. Sets the display colors and enables arrays of widgets (used in animation)
  Worker.java - Contains worker constructor as well as the basis for the worker array used in the animation to keep track of idling. Produce method is only used by Worker A to create the widgets and place them on conveyor belt AB. pickUp is a general method used by B, C, and D to synch and pick widgets off of their respective conveyor belts, do their work on them, and set them on the correct next belt again (or in D's place, steal the widgets haha). putDown is a general method used by B and C to synch and put widgets onto their respective next conveyor belts. run is an overridden method of Thread that names the position of the workers in the console and directs them to their correct jobs at their correct conveyor belts.
  ConveyorBelt.java - Modified version of BoundedBuffer.java by Greg Gagne, Peter Galvin, Avi Silberschatz (See below and in file header comments for full credits). Contains the ConveyorBelt constructor as well as vital bounded buffer methods. napping is a method called by workers (Threads) to sleep for a randomized amount of time. putOnBelt is the method called, both by produce and putDown to do the work of actually getting the Widget in the ConveyorBelt's array. takeOffBelt is the method called by pickUp to do the work of actually taking the widget out of the ConveyorBelt's array.
   Animation.java - Extends JFrame and contains the basis for all of the animation in the window. The constructor only calls the initialization method, which sraws thw base state of the workers and the conveyor belts. idleTime resets the Refresh object and draws the current state of the program; called when a thread is idling before a synch operation. updateFrame is what actually moves the widgets across the screen. Each slot is incremented and set to a specific coordinate. If the widget reaches the max slot, it is heald by the worker until they put it down on the belt. Refresh inner class extends JPanel, takes in the widget and worker arrays as arguements to set them, and sleeps for 500 milliseconds before calling its paintComponent which redraws the screen with the widgets moved and workerd in a different state as necessary. Base extends JPanel and sets the very base board for the startup screen.
  
  BoundedBuffer.java
    This program implements the bounded buffer using Java synchronization.
    @author Greg Gagne, Peter Galvin, Avi Silberschatz
    @version 1.0 - July 15, 1999
    Copyright 2000 by Greg Gagne, Peter Galvin, Avi Silberschatz
    Applied Operating Systems Concepts - John Wiley and Sons, Inc.
